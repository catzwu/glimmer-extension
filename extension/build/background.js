(()=>{const e=new Map,t=t=>{console.log(`[Background] Saving state for tab ${t}:`,e.get(t));const s=e.get(t)||{highlights:[],cards:[],isActive:!1};chrome.storage.local.set({[`tab_${t}`]:s})},s=(e,t)=>{chrome.tabs.sendMessage(e,t).catch((e=>{console.error("[Background] Could not notify content script (tab might not be loaded yet):",e)}))},o=e=>{chrome.runtime.sendMessage(e).catch((e=>{console.error("[Background] Could not notify extension popup (might not be open):",e)}))};chrome.tabs.onRemoved.addListener((t=>{console.log(`[Background] Cleaning up data for closed tab ${t}`),e.delete(t),chrome.storage.local.remove([`tab_${t}`])})),chrome.action.onClicked.addListener((e=>{chrome.sidePanel.setOptions({path:"index.html",enabled:!0}),chrome.sidePanel.open({windowId:e.windowId}).catch((e=>{console.error("[Background] Error opening side panel:",e)}))})),chrome.runtime.onMessage.addListener(((r,c,i)=>{if(!chrome.runtime?.id)return console.error("[Background] No runtime ID found"),void i({success:!1,error:"No runtime ID found"});const a=c.tab?.id||r.tabId;switch(console.log("[Background] Received message:",r,"from",c,"using tabId:",a),r.type){case"CLOSE_SIDE_PANEL":return chrome.sidePanel.setOptions({enabled:!1}).then((()=>{i({success:!0})})).catch((e=>{i({success:!1,error:e})})),!0;case"TOGGLE_ACTIVATION":{if(!a)return console.error("[Background] No tab ID for toggle activation"),void i({success:!1,error:"No tab ID found"});const r=e.get(a)||{highlights:[],cards:[],isActive:!1};r.isActive=!r.isActive,e.set(a,r),t(a),s(a,{type:"ACTIVATION_CHANGED",isActive:r.isActive}),o({type:"ACTIVATION_CHANGED",isActive:r.isActive,tabId:a}),i({success:!0})}break;case"GET_STATE":return a?((async t=>{console.log(`[Background] Loading state for tab ${t}`);const s=(await chrome.storage.local.get([`tab_${t}`]))[`tab_${t}`]||{highlights:[],cards:[],isActive:!1};return e.set(t,s),s})(a).then((e=>{i(e)})),!0):(console.error("[Background] No tab ID for get state"),void i({highlights:[],cards:[],isActive:!1}));case"ADD_HIGHLIGHT":{if(!a)return console.error("[Background] No tab ID for add highlight"),void i({success:!1,error:"No tab ID found"});const s=e.get(a)||{highlights:[],cards:[],isActive:!1},n={id:r.id,text:r.text,url:c.tab?.url||"",timestamp:Date.now()};s.highlights=[...s.highlights,n],e.set(a,s),t(a),o({type:"HIGHLIGHTS_UPDATED",highlights:s.highlights,tabId:a}),i({success:!0})}break;case"REMOVE_HIGHLIGHT":{if(!a)return console.error("[Background] No tab ID for remove highlight"),void i({success:!1,error:"No tab ID found"});const c=e.get(a)||{highlights:[],cards:[],isActive:!1};c.highlights=c.highlights.filter((e=>e.id!==r.id)),e.set(a,c),t(a),s(a,{type:"REMOVE_HIGHLIGHT_CONTENT_SCRIPT",id:r.id}),o({type:"HIGHLIGHTS_UPDATED",highlights:c.highlights,tabId:a}),i({success:!0})}break;case"CLEAR_HIGHLIGHTS":{if(!a)return console.error("[Background] No tab ID for clear highlights"),void i({success:!1,error:"No tab ID found"});const s=e.get(a)||{highlights:[],cards:[],isActive:!1};s.highlights=[],e.set(a,s),t(a),o({type:"HIGHLIGHTS_UPDATED",highlights:s.highlights,tabId:a}),i({success:!0})}break;case"ADD_CARDS":case"REMOVE_CARD":case"CLEAR_CARDS":{if(!a)return console.error(`[Background] No tab ID for ${r.type}`),void i({success:!1,error:"No tab ID found"});const s=e.get(a)||{highlights:[],cards:[],isActive:!1};switch(r.type){case"ADD_CARDS":s.cards=[...s.cards,...r.cards];break;case"REMOVE_CARD":s.cards=s.cards.filter(((e,t)=>t!==r.index));break;case"CLEAR_CARDS":s.cards=[]}e.set(a,s),t(a),i({success:!0})}}}))})();